package domain

import (
	"errors"
	"fmt"
)

var ErrGeneral = errors.New("general error")
var ErrDomain = fmt.Errorf("domain error: %w", ErrGeneral)
var ErrInvalidID = fmt.Errorf("invalid id: %w", ErrDomain)
var ErrInvalidPhone = fmt.Errorf("invalid phone: %w", ErrDomain)
var ErrInvalidEmail = fmt.Errorf("invalid email: %w", ErrDomain)
var ErrInvalidFirstName = fmt.Errorf("invalid first name: %w", ErrDomain)
var ErrInvalidLastName = fmt.Errorf("invalid last name: %w", ErrDomain)
var ErrInvalidLogin = fmt.Errorf("invalid login: %w", ErrDomain)
var ErrInvalidBirthDate = fmt.Errorf("invalid birth date: %w", ErrDomain)
var ErrInvalidPassword = fmt.Errorf("invalid password: %w", ErrDomain)
var ErrUserIsDeleted = fmt.Errorf("user is deleted: %w", ErrDomain)
var ErrInvalidFamilyName = fmt.Errorf("invalid family name: %w", ErrDomain)
var ErrInvalidZoneName = fmt.Errorf("invalid zone name: %w", ErrDomain)
var ErrInvalidZoneSafety = fmt.Errorf("invalid zone safety: %w", ErrDomain)
var ErrInvalidZoneBoundaries = fmt.Errorf("invalid zone boundaries: %w", ErrDomain)
var ErrZoneIsDeleted = fmt.Errorf("zone is deleted: %w", ErrDomain)
var ErrInvalidSendTime = fmt.Errorf("invalid send time: %w", ErrDomain)
var ErrInvalidNotificationLogContext = fmt.Errorf("invalid notification log context: %w", ErrDomain)
var ErrInvalidFrequency = fmt.Errorf("invalid frequency: %w", ErrDomain)
var ErrInvalidEventType = fmt.Errorf("invalid event type: %w", ErrDomain)
var ErrUserNotFound = fmt.Errorf("user not found: %w", ErrDomain)
var ErrInvalidZoneOrBattery = fmt.Errorf("zone or battery are required: %w", ErrDomain)
var ErrNotifySettingIsDeleted = fmt.Errorf("notify setting is deleted: %w", ErrDomain)
var ErrFamilyIsDeleted = fmt.Errorf("family is deleted: %w", ErrDomain)
var ErrRoleNotFound = fmt.Errorf("role not found: %w", ErrDomain)
var ErrFamilyNotFound = fmt.Errorf("family not found: %w", ErrDomain)
var ErrInvitationToFamilyIsDeleted = fmt.Errorf("invitation to family is deleted: %w", ErrDomain)
var ErrInvalidLatitude = fmt.Errorf("invalid latitude: %w", ErrDomain)
var ErrInvalidLongitude = fmt.Errorf("invalid longitude: %w", ErrDomain)
var ErrUserAlreadyIntegrated = fmt.Errorf("user already integrated: %w", ErrDomain)
var ErrTgConnect = fmt.Errorf("failed to connect to tg: %w", ErrDomain)
var ErrInvalidZone = fmt.Errorf("invalid zone: %w", ErrDomain)
var ErrInvalidBattery = fmt.Errorf("invalid battery: %w", ErrDomain)
